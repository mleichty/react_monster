{"version":3,"sources":["head.js","body.js","legs.js","App.js","registerServiceWorker.js","index.js"],"names":["Head","props","state","headClass","i","this","setState","console","log","className","onClick","mouseClickLeft","id","mouseClickRight","Component","Body","bodyClass","Legs","legsClass","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.672a3616.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./head.css\";\r\n\r\n//create a Head component\r\nclass Head extends Component {\r\n    \r\n    //define this.state for the headClass and i\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            headClass: \"headOriginalState\",\r\n            i: 0\r\n        }\r\n    }\r\n\r\n    //clicks don't loop through, both start from 0\r\n    //working code but not supposed to directly mutate state?\r\n    //function for when you click the left arrow\r\n    mouseClickLeft() {\r\n        // change the class of the left button div after you click\r\n        this.setState( { headClass: \"headClass\" + this.state.i-- } )\r\n        //if the state increments below zero, send back to 2 since only have 3 classes (0,1,2)\r\n        if (this.state.i < 0) {\r\n            this.setState( {i: 2 } )\r\n        }\r\n        console.log(this.state.i)\r\n    }\r\n    \r\n    //working code but not supposed to directly mutate state?\r\n    //function for when you click the right arrow\r\n    mouseClickRight() {\r\n        // change the class of the left button div after you click\r\n        this.setState( { headClass: \"headClass\" + this.state.i++ } )\r\n        //if the state increments above three, send back to 0 since only have 3 classes (0,1,2\r\n        if (this.state.i === 3) {\r\n            this.setState( {i: 0 } )\r\n        }\r\n        console.log(this.state.i)\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"headDiv\">\r\n\r\n                <div className=\"buttonLeft\"\r\n                    onClick={() => { this.mouseClickLeft() }}>\r\n                </div>\r\n\r\n                <div id=\"head\"\r\n                    className={this.state.headClass}>\r\n                </div>\r\n\r\n                <div className=\"buttonRight\"\r\n                    onClick={() => { this.mouseClickRight() }}>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default Head;","import React, { Component } from 'react';\r\nimport \"./body.css\";\r\n\r\n//body same as head component\r\nclass Body extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            bodyClass: \"bodyOriginalState\",\r\n            i: 0\r\n        }\r\n    }\r\n\r\n    //clicks don't loop through, both start from 0\r\n    //working code but not supposed to directly mutate state?\r\n    mouseClickLeft() {\r\n        this.setState( { bodyClass: \"bodyClass\" + this.state.i-- } )\r\n        if (this.state.i < 0) {\r\n            this.setState( {i: 2 } )\r\n        }\r\n        console.log(this.state.i)\r\n    }\r\n    \r\n    //working code but not supposed to directly mutate state?\r\n    mouseClickRight() {\r\n        this.setState( { bodyClass: \"bodyClass\" + this.state.i++ } )\r\n        if (this.state.i === 3) {\r\n            this.setState( {i: 0 } )\r\n        }\r\n        console.log(this.state.i)\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"bodyDiv\">\r\n\r\n                <div className=\"buttonLeft\"\r\n                    onClick={() => { this.mouseClickLeft() }}>\r\n                </div>\r\n                \r\n                <div id=\"body\" \r\n                    className={this.state.bodyClass}>\r\n                </div>\r\n\r\n                <div className=\"buttonRight\"\r\n                    onClick={() => { this.mouseClickRight() }}>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default Body;","import React, { Component } from 'react';\r\nimport \"./legs.css\";\r\n\r\n//legs same as head component\r\nclass Legs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            legsClass: \"legsOriginalState\",\r\n            i: 0\r\n        }\r\n    }\r\n\r\n    //clicks don't loop through, both start from 0\r\n    //working code but not supposed to directly mutate state?\r\n    mouseClickLeft() {\r\n        this.setState( { legsClass: \"legsClass\" + this.state.i-- } )\r\n        if (this.state.i < 0) {\r\n            this.setState( {i: 2 } )\r\n        }\r\n        console.log(this.state.i)\r\n    }\r\n    \r\n    //working code but not supposed to directly mutate state?\r\n    mouseClickRight() {\r\n        this.setState( { legsClass: \"legsClass\" + this.state.i++ } )\r\n        if (this.state.i === 3) {\r\n            this.setState( {i: 0 } )\r\n        }\r\n        console.log(this.state.i)\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"legsDiv\">\r\n\r\n                 <div className=\"buttonLeft\"\r\n                    onClick={() => { this.mouseClickLeft() }}>\r\n                </div>\r\n                \r\n                <div id=\"legs\" \r\n                    className={this.state.legsClass}>\r\n                </div>\r\n\r\n                <div className=\"buttonRight\"\r\n                    onClick={() => { this.mouseClickRight() }}>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default Legs;","// import files from components\nimport React, { Component } from 'react';\nimport './App.css';\nimport Head from \"./head.js\";\nimport Body from \"./body.js\";\nimport Legs from \"./legs.js\";\n\n// create App class that extends Component\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"monster\">\n          {/* use component divs created for the head, body and legs */}\n          <Head></Head>\n          <Body></Body>\n          <Legs></Legs>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n// export the App\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}